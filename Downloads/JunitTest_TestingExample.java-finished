package lab2;

import static org.junit.Assert.*;



import org.junit.Test;
import org.junit.rules.Timeout;
import org.junit.runners.MethodSorters;
import org.junit.FixMethodOrder;
import org.junit.Rule;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class JunitTest_TestingExample {

	@Rule
	public Timeout globalTimeout = Timeout.seconds(1);

	
	@Test
	public void test1() {
		
		assertEquals("The function should give 1800 points in this situation", 1800, TestingExample.RewardPoints(1100, 500));
	}
	
	@Test
	public void test2() { 
		assertEquals("The function should give 1800 points in this situation ", 1800, TestingExample.RewardPoints(1100,500));
	}
	
	@Test
	public void test3() {
		assertEquals("The function should give -1 points in this situation", -1, TestingExample.RewardPoints(100, 500));
	}
	@Test
	public void test4() {
		assertEquals("The function should give 1800 points in this situation", 1500, TestingExample.RewardPoints(1000,500));
	}
	@Test
	public void test5() {
		assertEquals("The function should give 1800 points in this situation", 1500, TestingExample.RewardPoints(1000, 500));
		
	}
	@Test
	public void test6() {
		assertEquals("The function should give 1800 points in this situation", 150, TestingExample.RewardPoints(500, 350));
	}
	@Test
	public void test7() {
		assertEquals("The function should give 1800 points in this situation", 0, TestingExample.RewardPoints(500, 500));
		
	}
	@Test
	public void test8() {
		assertEquals("The function should give 1800 points in this situation",150, TestingExample.RewardPoints(500, 350));
		
	}
	@Test
	public void test9() {
		assertEquals("The function should give 1800 points in this situation",-1, TestingExample.RewardPoints(-100, 500));
		
	}
	@Test
	public void test10() {
		assertEquals("The function should give 600 points in this situation",600,TestingExample.RewardPoints(600,300));
		
	}
}
